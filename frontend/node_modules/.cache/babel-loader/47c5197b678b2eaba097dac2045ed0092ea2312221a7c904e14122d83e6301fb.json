{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/0-ReactProjects/router-2/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n//Done\n\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n//Done\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n//Done\n\n// 4. Add properly working links to the MainNavigation\n//Done\n\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n//Done\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// Done\n\n// 7. Output the ID of the selected event on the EventDetailPage\n//Done\n\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage from \"./pages/Events\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport NewEventsPage from \"./pages/NewEventPage\";\nimport EditEventsPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const Router = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }, this)\n    }, {\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 36\n      }, this)\n    }, {\n      path: \"events/:eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }, this)\n    }, {\n      path: \"events/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 40\n      }, this)\n    }, {\n      path: \"events/:eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 50\n      }, this)\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: Router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventsPage","EditEventsPage","RootLayout","jsxDEV","_jsxDEV","App","Router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","router","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/0-ReactProjects/router-2/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n//Done\n\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n//Done\n\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n//Done\n\n// 4. Add properly working links to the MainNavigation\n//Done\n\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n//Done\n\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// Done\n\n// 7. Output the ID of the selected event on the EventDetailPage\n//Done\n\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./pages/Home\";\nimport EventsPage from \"./pages/Events\";\nimport EventDetailPage from \"./pages/EventDetail\";\nimport NewEventsPage from \"./pages/NewEventPage\";\nimport EditEventsPage from \"./pages/EditEvent\";\nimport RootLayout from \"./pages/Root\";\n\nfunction App() {\n  const Router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: <RootLayout />,\n      children: [\n        { index: true, element: <HomePage /> },\n        { path: \"events\", element: <EventsPage /> },\n        { path: \"events/:eventId\", element: <EventDetailPage /> },\n        { path: \"events/new\", element: <NewEventsPage /> },\n        { path: \"events/:eventId/edit\", element: <EditEventsPage /> },\n      ],\n    },\n  ]);\n\n  return <RouterProvider router={Router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,eAAe,MAAM,qBAAqB;AACjD,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,cAAc,MAAM,mBAAmB;AAC9C,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,CACjC;IACEW,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACF,UAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBC,QAAQ,EAAE,CACR;MAAEC,KAAK,EAAE,IAAI;MAAEN,OAAO,eAAEJ,OAAA,CAACP,QAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACtC;MAAEL,IAAI,EAAE,QAAQ;MAAEC,OAAO,eAAEJ,OAAA,CAACN,UAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAC3C;MAAEL,IAAI,EAAE,iBAAiB;MAAEC,OAAO,eAAEJ,OAAA,CAACL,eAAe;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EACzD;MAAEL,IAAI,EAAE,YAAY;MAAEC,OAAO,eAAEJ,OAAA,CAACJ,aAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC,EAClD;MAAEL,IAAI,EAAE,sBAAsB;MAAEC,OAAO,eAAEJ,OAAA,CAACH,cAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEjE,CAAC,CACF,CAAC;EAEF,oBAAOR,OAAA,CAACT,cAAc;IAACoB,MAAM,EAAET;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACI,EAAA,GAhBQX,GAAG;AAkBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}